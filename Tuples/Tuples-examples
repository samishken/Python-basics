fullname = ('Grace', 'M', 'Hopper')
print(fullname)

- def convert_seconds(seconds):
  - hours = seconds // 3600
  - minutes = (seconds - hours * 3600) // 60
  - remaining_seconds = seconds - hours * 3600 - minutes * 60
  - return hours, minutes, remaining_seconds
- result = convert_seconds(5000)
- print(type(result))
- print(result). #1, 23, 20
- print(hours, minutes, seconds)


The guest_list function reads in a list of tuples with the name, age, and profession of each party guest, and prints the sentence "Guest is X years old and works as __." for each one. For example, guest_list(('Ken', 30, "Chef"), ("Pat", 35, 'Lawyer'), ('Amanda', 25, "Engineer")) should print out:

Ken is 30 years old and works as Chef.

Pat is 35 years old and works as Lawyer.

Amanda is 25 years old and works as Engineer.

Fill in the gaps in this function to do that.
= Guests has ELEMENTS of Guest
= Guest includes (name, age, profession)


- def guest_list(guests):
	- for guest in guests:
		- print("{} is {} years old and works as {}".format(guest[0], guest[1], guest[2]))
    - outcome "Ken is 30 years old and works as Chef."
- guest_list([('Ken', 30, "Chef"), ("Pat", 35, 'Lawyer'), ('Amanda', 25, "Engineer")])





- def full_emails(people):
  - result = []
  - for email, name in people:
   -  result.append("{} <{}>".format(name,email))
  - return result

- print(full_emails([("alex@example.com", "Alex Diego"), ("shay@example.com", "Shay Brandt")]))

expected outcome: ['Alex Diego <alex@example.com>', 'Shay Brandt <shay@example.com>']
